{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/components/navbar/navbar.component.ts","./src/app/shared/components/navbar/navbar.component.html","./src/app/shared/components/toasts/toasts.component.ts","./src/app/shared/components/toasts/toasts.component.html","./src/app/shared/components/toggle-button/toggle-button.component.ts","./src/app/shared/components/toggle-button/toggle-button.component.html","./src/app/shared/services/toast.service.ts","./src/app/shared/shared.module.ts","./src/app/weather/components/favorite-item/favorite-item.component.ts","./src/app/weather/components/favorite-item/favorite-item.component.html","./src/app/weather/components/forecast/forecast.component.ts","./src/app/weather/components/forecast/forecast.component.html","./src/app/weather/components/search-bar/search-bar.component.ts","./src/app/weather/components/search-bar/search-bar.component.html","./src/app/weather/components/weather-view/weather-view.component.ts","./src/app/weather/components/weather-view/weather-view.component.html","./src/app/weather/pages/favorites/favorites.component.ts","./src/app/weather/pages/favorites/favorites.component.html","./src/app/weather/pages/search-page/search-page.component.ts","./src/app/weather/pages/search-page/search-page.component.html","./src/app/weather/services/auto-complete.service.ts","./src/app/weather/services/forecast.service.ts","./src/app/weather/services/geolocation.service.ts","./src/app/weather/services/weather.service.ts","./src/app/weather/store/actions.ts","./src/app/weather/store/meta-reducers.ts","./src/app/weather/store/reducers.ts","./src/app/weather/utils/weather-helper.ts","./src/app/weather/weather-routing.module.ts","./src/app/weather/weather.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { trigger, transition, state, style, animate } from '@angular/animations';\r\n\r\nexport let fade = (name: string, miliseconds: number, delay?: number) => {\r\n  if(!delay) delay = 0;\r\n  return trigger(name, [\r\n    state('void', style({ opacity: 0 })),\r\n    transition(':enter, :leave', [animate(`${miliseconds}ms ${delay}ms`)])\r\n  ])\r\n}\r\nexport let glide = (name: string, pixels: number, miliseconds: number, delay?: number) => {\r\n  if(!delay) delay = 0;\r\n  return trigger(name, [\r\n    state('void', style({ transform: `translateY(${pixels}px)` })),\r\n    transition(':enter', [animate(`${miliseconds}ms ${delay}ms`)])\r\n  ])\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/search'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'WeatherApp';\n}\n","<header>\n  <app-navbar></app-navbar>\n</header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<footer></footer>\n<app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { WeatherModule } from './weather/weather.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    WeatherModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  public isMenuCollapsed: boolean = true;\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n  <a class=\"navbar-brand\" routerLink=\"/\">Herolo Weather Task</a>\n  <button class=\"navbar-toggler\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\n    &#9776;\n  </button>\n  <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse d-lg-flex justify-content-end\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"search\" routerLinkActive=\"active\" (click)=\"isMenuCollapsed = true\">Search</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"favorites\" routerLinkActive=\"active\" (click)=\"isMenuCollapsed = true\">Favorites</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\nimport { ToastService } from '../../services/toast.service';\n\n@Component({\n  selector: 'app-toasts',\n  templateUrl: './toasts.component.html',\n  styleUrls: ['./toasts.component.scss']\n})\nexport class ToastsComponent {\n  constructor(public toastService: ToastService) { }\n}\n","<ngb-toast *ngFor=\"let toast of toastService.toasts\"\n  [header]=\"toast.header\" [class]=\"toast.className\" [autohide]=\"true\"\n  [delay]=\"5000\" (hide)=\"toastService.removeToast(toast)\">\n  {{toast.body}}\n</ngb-toast>\n","import { Component, Output, Input, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss']\n})\nexport class ToggleButtonComponent {\n\n  @Output()\n  public onChangeState: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n  @Input()\n  public falseText: string;\n  @Input()\n  public trueText: string;\n\n  public changeState(state: boolean): void {\n    this.onChangeState.emit(state);\n  }\n\n}\n","<div class=\"form-check form-check-inline\">\n  <input (change)=\"changeState(false)\" class=\"form-check-input\" type=\"radio\" name=\"switchButton\">\n  <label class=\"form-check-label\" for=\"inlineRadio1\">{{falseText}}</label>\n</div>\n<div class=\"form-check form-check-inline\">\n  <input checked (change)=\"changeState(true)\" class=\"form-check-input\" type=\"radio\" name=\"switchButton\">\n  <label class=\"form-check-label\" for=\"inlineRadio2\">{{trueText}}</label>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Toast } from '../interfaces/Toast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  public toasts: Toast[] = [];\n\n  public showErrorToast(message?: string): void {\n    this.show({\n      header: 'Error',\n      body: message || 'Something went wrong, please try again later',\n      className: 'bg-danger text-light'\n    })\n  }\n\n  public show(toast: Toast): void {\n    this.toasts.push(toast);\n  }\n\n  public removeToast(toast: Toast): void {\n    this.toasts = this.toasts.filter(t => t != toast);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToggleButtonComponent } from './components/toggle-button/toggle-button.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ToastsComponent } from './components/toasts/toasts.component';\nimport { NgbToastModule, NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\n@NgModule({\n  declarations: [\n    ToggleButtonComponent,\n    NavbarComponent,\n    ToastsComponent\n  ],\n  imports: [\n    CommonModule,\n    NgbCollapseModule,\n    RouterModule,\n    NgbToastModule\n  ],\n  exports: [\n    ToggleButtonComponent,\n    NavbarComponent,\n    ToastsComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from '../../interfaces/weather';\nimport { WeatherHelper } from '../../utils/weather-helper';\nimport { Store } from '@ngrx/store';\nimport * as WeatherActions from '../../store/actions';\nimport { Router } from '@angular/router';\nimport { WeatherService } from '../../services/weather.service';\nimport { ForecastService } from '../../services/forecast.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-favorite-item',\n  templateUrl: './favorite-item.component.html',\n  styleUrls: ['./favorite-item.component.scss']\n})\nexport class FavoriteItemComponent implements OnInit {\n\n  @Input()\n  public weather: Weather;\n\n  constructor(\n    private _store: Store,\n    private _router: Router,\n    private _weatherService: WeatherService,\n    private _forecastService: ForecastService,\n    public toastService: ToastService,\n    public weatherHelper: WeatherHelper\n  ) { }\n\n  public ngOnInit(): void {\n    this.updateFavorite(this.weather);\n  }\n\n  public removeFavorite(): void {\n    this._store.dispatch(new WeatherActions.RemoveFavorite(this.weather.Key))\n  }\n\n  public updateFavorite(favorite: Weather) {\n    try {\n      let lastUpdate = new Date(favorite.currentWeather.LocalObservationDateTime);\n      let today = new Date(Date.now());\n      if (today.getTime() - lastUpdate.getTime() > 1000 * 60 * 60 * 24) {\n        let updatedFavorite: Weather = {\n          Key: favorite.Key,\n          state: favorite.state,\n          country: favorite.country,\n          currentWeather: null,\n          forecast: null\n        }\n        Promise.all([\n          this._weatherService.getCurrentWeather(favorite.Key).toPromise(),\n          this._forecastService.getForecast(favorite.Key).toPromise()\n        ]).then(results => {\n          updatedFavorite.currentWeather = results[0][0];\n          updatedFavorite.forecast = results[1];\n          this._store.dispatch(new WeatherActions.UpdateFavorite(favorite))\n        })\n      }\n    } catch (err) {\n      this.toastService.showErrorToast(err.message);\n    }\n  }\n\n  public getFullWeatherPage(): void {\n    this._router.navigate(['search'], {\n      queryParams: {\n        key: this.weather.Key,\n        state: this.weather.state,\n        country: this.weather.country\n      }\n    })\n  }\n\n}\n","<div class=\"container-fluid border p-2 favorite-item\"\n[ngClass]=\"{\n  'bg-light': weatherHelper.isDayTime(weather),\n  'bg-dark text-light': !weatherHelper.isDayTime(weather)\n}\" (click)=\"getFullWeatherPage()\">\n<h4>{{ weather.state }}</h4>\n  <h5>{{ weather.country }}</h5>\n<img class=\"weatherIcon\" [src]=\"weatherHelper.getWeatherIconLink(weather.currentWeather.WeatherIcon)\" />\n<p class=\"forecast-text\">{{ weather.currentWeather.WeatherText }}</p>\n<p class=\"mb-2\">\n  {{ weatherHelper.getCTemperatureString(weather.currentWeather.Temperature.Metric) }}\n</p>\n<p>{{ weather.currentWeather.LocalObservationDateTime | date:'EEEE'}}</p>\n<button (click)=\"removeFavorite()\" class=\"btn btn-danger\">\n  Remove from Favorites\n</button>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent {\n\n  @Input()\n  public iconUrl: string;\n  @Input()\n  public text: string;\n  @Input()\n  public tempRange: string;\n  @Input()\n  public date: Date;\n}\n","<img class=\"weatherIcon\" [src]=\"iconUrl\" alt=\"\">\n<p class=\"forecast-text\">{{ text }}</p>\n<p class=\"mb-5\">\n  {{ tempRange }}\n</p>\n<p class=\"forecast-date\">{{ date | date:'EEEE'}}</p>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IAutoCompleteResponse } from '../../interfaces/iauto-complete-response';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { AutoCompleteService } from '../../services/auto-complete.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent {\n\n  public selectedCity: IAutoCompleteResponse;\n  searchInput: string = '';\n\n  @Input() public inputPlaceholder: string;\n  @Output() public search: EventEmitter<IAutoCompleteResponse> = new EventEmitter<IAutoCompleteResponse>();\n\n  constructor(\n    private _autoCompleteService: AutoCompleteService,\n    public toastService: ToastService\n  ) { }\n\n  public onSearch(): void {\n    if (!this.searchInput) return;\n    if (!this.selectedCity)\n      return this.toastService.showErrorToast('Invalid state, please try again');\n    this.search.emit(this.selectedCity);\n  }\n\n  public keyPress(event): void {\n    this.filterText()\n    if (event.key === \"Enter\")\n      this.onSearch();\n  }\n\n  public filterText(): void {\n    try{\n      const nonEnglishRegex = new RegExp(/^[^A-Za-z]*$/);\n      this.searchInput = this.searchInput.replace(nonEnglishRegex, '');\n    } catch(err) {\n      return;\n    }\n  }\n\n  public selectFormatter = (value: IAutoCompleteResponse): string => {\n    this.selectedCity = value;\n    this.onSearch()\n    return this.popupFormatter(value);\n  }\n  public popupFormatter = (value: IAutoCompleteResponse): string => {\n    return value ? `${value.LocalizedName}, ${value.Country.LocalizedName}` : null\n  }\n\n  public onAutoComplete = (value$: Observable<string>): Observable<IAutoCompleteResponse[]> => {\n    return value$.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap(value => this._autoCompleteService.getAutoComplete(value)),\n      catchError((err) => { this.toastService.showErrorToast(err.message); return of([]) })\n    )\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-8 offset-lg-2\">\n      <div class=\"input-group\">\n        <input\n        (keyup)=\"keyPress($event)\"\n        #searchValue=\"ngModel\"\n        [(ngModel)]=\"searchInput\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{inputPlaceholder}}\"\n        [ngbTypeahead]=\"onAutoComplete\"\n        [resultFormatter]=\"popupFormatter\"\n        [inputFormatter]=\"selectFormatter\">\n        <div class=\"input-group-append\">\n          <button (click)=\"onSearch()\" class=\"btn btn-outline-secondary\" type=\"button\">\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from '../../interfaces/weather';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { FavoritesState } from '../../store/state';\nimport * as WeatherActions from '../../store/actions';\nimport { WeatherHelper } from '../../utils/weather-helper';\n\n@Component({\n  selector: 'app-weather-view',\n  templateUrl: './weather-view.component.html',\n  styleUrls: ['./weather-view.component.scss']\n})\nexport class WeatherViewComponent implements OnInit {\n\n  @Input()\n  public weather: Weather\n  public isCelsiusType: boolean = true;\n  public readonly favorites$: Observable<Weather[]>;\n  public favorites: Weather[];\n\n  constructor(\n    private _store: Store<FavoritesState>,\n    public weatherHelper: WeatherHelper\n  ) {\n    this.favorites$ = this._store.select('favorites')\n  }\n  public ngOnInit(): void {\n    this.favorites$.subscribe(result => this.favorites = result);\n  }\n  public setTemperatureType(value: boolean): void {\n    this.isCelsiusType = value;\n  }\n  public addFavorite(): void {\n    this._store.dispatch(new WeatherActions.AddFavorite(this.weather))\n  }\n  public removeFavorite(): void {\n    this._store.dispatch(new WeatherActions.RemoveFavorite(this.weather.Key))\n  }\n  public isFavorite(): boolean {\n    return this.favorites.findIndex(fav => fav.Key === this.weather.Key) >= 0;\n  }\n}\n","<div class=\"jumbotron mt-2 border pt-4 pb-4\" [ngClass]=\"{\n  'bg-light': weatherHelper.isDayTime(weather),\n  'bg-dark text-light': !weatherHelper.isDayTime(weather)}\">\n  <div class=\"row\">\n    <div class=\"col-1 d-flex justify-content-center\">\n      <img class=\"weatherIcon\" [src]=\"weatherHelper.getWeatherIconLink(weather.currentWeather.WeatherIcon)\" alt=\"\">\n    </div>\n    <div class=\"col-5\">\n      <h4>{{ weather.state }}, {{ weather.country }}</h4>\n      <span *ngIf=\"isCelsiusType\">\n        {{weatherHelper.getCTemperatureString(weather.currentWeather.Temperature.Metric)}}\n      </span>\n      <span *ngIf=\"!isCelsiusType\">\n        {{weatherHelper.getFTemperatureString(weather.currentWeather.Temperature.Imperial)}}\n      </span>\n    </div>\n    <div class=\"col-5 text-right\">\n      <button *ngIf=\"!isFavorite()\" (click)=\"addFavorite()\" class=\"btn btn btn-success\">\n        Add to Favorites\n      </button>\n      <button *ngIf=\"isFavorite()\" (click)=\"removeFavorite()\" class=\"btn btn btn-danger\">\n        Remove from Favorites\n      </button>\n      <app-toggle-button (onChangeState)=\"setTemperatureType($event)\" class=\"d-block\" [trueText]=\"'Celsius'\"\n        [falseText]=\"'Fahrenheit'\"></app-toggle-button>\n    </div>\n  </div>\n  <div class=\"row mt-4\">\n    <div class=\"col-12 text-center\">\n      <h1>{{ weather.currentWeather.WeatherText }}</h1>\n      <h4>Forecast: <br> {{ weather.forecast.Headline.Text }}</h4>\n    </div>\n  </div>\n  <div class=\"row mt-4 d-flex justify-content-around\">\n    <div *ngFor=\"let forecast of weather.forecast.DailyForecasts; let i = index\"\n      class=\"col-5 col-lg-2 border m-1 text-center p-2 text-wrap mt-2\">\n      <app-forecast [iconUrl]=\"weatherHelper.getForecastIcon(weather,i)\" [date]=\"forecast.Date\"\n        [text]=\"weatherHelper.getCurrentForecastText(weather,i)\"\n        [tempRange]=\"weatherHelper.getTemperatureRange(forecast,isCelsiusType)\"></app-forecast>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Weather } from '../../interfaces/weather';\nimport { Store } from '@ngrx/store';\nimport { FavoritesState } from '../../store/state';\nimport { fade, glide } from 'src/app/animations';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n  animations: [\n    fade('fade',500),\n    glide('glide',-20,500),\n    fade('delayedFade',500,400),\n    glide('delayedGlide',-20,500,400)\n  ]\n})\nexport class FavoritesComponent {\n\n  public readonly favorites$: Observable<Weather[]>\n\n  constructor(private _store: Store<FavoritesState>) {\n    this.favorites$ = this._store.select('favorites');\n  }\n\n}\n","<div @fade @glide class=\"row\">\n  <div class=\"col-12 text-center\">\n    <h1>My Favorites</h1>\n  </div>\n</div>\n<div @delayedFade @delayedGlide class=\"row\">\n  <div class=\"col-8 offset-2 offset-md-0 col-md-4 col-lg-3 text-center mt-2 pt-2\" *ngFor=\"let favorite of favorites$ | async\">\n    <app-favorite-item [weather]=\"favorite\"></app-favorite-item>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../../services/weather.service';\nimport { ForecastService } from '../../services/forecast.service';\nimport { Weather } from '../../interfaces/weather';\nimport { IAutoCompleteResponse } from '../../interfaces/iauto-complete-response';\nimport { GeolocationService } from '../../services/geolocation.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { fade, glide } from 'src/app/animations';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n  animations: [\n    fade('fade',500),\n    glide('glide',-20,500),\n    fade('delayedFade',500,400),\n    glide('delayedGlide',-20,500,400)\n  ]\n})\nexport class SearchPageComponent implements OnInit {\n\n  public weather: Weather;\n\n  constructor(\n    private _weatherService: WeatherService,\n    private _forecastService: ForecastService,\n    private _geolocation: GeolocationService,\n    private _route: ActivatedRoute,\n    public toastService: ToastService\n  ) {\n    this.resetWeather();\n  }\n\n  public ngOnInit(): void {\n    if(this._route.snapshot.queryParams.key){\n      this.getWeatherFromRouteParams();\n    } else {\n      this.getLocalWeather();\n    }\n  }\n\n  private getWeatherFromRouteParams(): void {\n    let params = this._route.snapshot.queryParams;\n    if (params.key && params.state && params.country) {\n      this.setWeather(params.key, params.state, params.country);\n    }\n  }\n\n  public async getLocalWeather(): Promise<void> {\n    try {\n      const result = await this._geolocation.getCurrentLocation();\n      this.setWeather(result.Key, result.LocalizedName, result.Country.LocalizedName);\n    } catch (err) {\n      this.toastService.showErrorToast(err.message)\n    }\n  }\n\n  private resetWeather(): void {\n    this.weather = { Key: null, state: null, country: null, currentWeather: null, forecast: null };\n  }\n\n  public get isWeatherLoaded(): boolean {\n    for (let key in this.weather) {\n      if (this.weather[key] == null) {\n        return false\n      }\n    }\n    return true\n  }\n\n  public onSearch(state: IAutoCompleteResponse): void {\n    this.setWeather(state.Key, state.LocalizedName, state.Country.LocalizedName);\n  }\n\n  public setWeather(key: string, state: string, country: string): void {\n    this.resetWeather();\n    this.weather.Key = key;\n    this.weather.state = state;\n    this.weather.country = country;\n    this.setWeatherDataByKey(key);\n  }\n\n  private setWeatherDataByKey(key: string): void {\n    this._weatherService.getCurrentWeather(key).toPromise().then(data => {\n      this.weather.currentWeather = data[0];\n    }).catch(err => this.toastService.showErrorToast(err.message));\n\n    this._forecastService.getForecast(key).toPromise().then(data => {\n      this.weather.forecast = data;\n    }).catch(err => this.toastService.showErrorToast(err.message));\n  }\n\n\n}\n","<div @fade @glide class=\"row\">\n  <div class=\"col-10 offset-1\">\n    <app-search-bar (search)=\"onSearch($event)\" [inputPlaceholder]=\"'Search State'\" ></app-search-bar>\n  </div>\n</div>\n<div @delayedFade @delayedGlide class=\"row mt-2\">\n  <div class=\"col-10 offset-1\">\n    <app-weather-view *ngIf=\"isWeatherLoaded\" [weather]=\"weather\"></app-weather-view>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IAutoCompleteResponse } from '../interfaces/iauto-complete-response';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoCompleteService {\n\n  private readonly url = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete';\n\n  constructor(private _http: HttpClient) { }\n\n  public getAutoComplete(value: string): Observable<IAutoCompleteResponse[]> {\n    return this._http.get<IAutoCompleteResponse[]>(this.url, {\n      params: {\n        apikey: environment.apiKey,\n        q: value\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IForecastResponse } from '../interfaces/iforecast-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n\n  private readonly url = 'https://dataservice.accuweather.com/forecasts/v1/daily/5day/';\n\n  constructor(private _http: HttpClient) { }\n\n  public getForecast(locationKey: string): Observable<IForecastResponse> {\n    return this._http.get<IForecastResponse>(this.url + locationKey,{\n      params:{\n        apikey: environment.apiKey,\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Location } from '../interfaces/Location';\nimport { IGeolocationResponse } from '../interfaces/igeolocation-response';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n\n  private readonly url = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search';\n\n  constructor(private _http: HttpClient) { }\n\n  private getGeolocation(): Promise<Location> {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(\n        (response) => res({ lon: response.coords.longitude, lat: response.coords.latitude }),\n        (err) => rej(err)\n      );\n    })\n  }\n\n  private getStateByGeolocation(lat: number, lon: number): Promise<IGeolocationResponse> {\n    return this._http.get<IGeolocationResponse>(this.url, {\n      params: {\n        apikey: environment.apiKey,\n        q: `${lat.toString()},${lon.toString()}`\n      }\n    }).toPromise();\n  }\n\n  public async getCurrentLocation(): Promise<IGeolocationResponse> {\n      const location = await this.getGeolocation();\n      return await this.getStateByGeolocation(location.lat, location.lon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { IWeatherResponse } from '../interfaces/iweather-reponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  private readonly url: string = 'https://dataservice.accuweather.com/currentconditions/v1/';\n\n  constructor(private _http: HttpClient) { }\n\n  public getCurrentWeather(locationKey: string): Observable<IWeatherResponse[]> {\n    return this._http.get<IWeatherResponse[]>(this.url + locationKey, {\n      params:{\n        apikey: environment.apiKey\n      }\n    })\n  }\n}\n","import { Action } from '@ngrx/store';\r\nimport { Weather } from '../interfaces/weather';\r\n\r\nexport const Types = {\r\n  ADD_FAVORITE: \"ADD_FAVORITE\",\r\n  REMOVE_FAVORITE: \"REMOVE_FAVORITE\",\r\n  UPDATE_FAVORITE: \"UPDATE_FAVORITE\"\r\n\r\n}\r\n\r\nexport class AddFavorite implements Action {\r\n  public readonly type = Types.ADD_FAVORITE;\r\n  constructor(public payload: Weather) { }\r\n}\r\n\r\nexport class RemoveFavorite implements Action {\r\n  public readonly type = Types.REMOVE_FAVORITE\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class UpdateFavorite implements Action {\r\n  public readonly type = Types.UPDATE_FAVORITE\r\n  constructor(public payload: Weather) { }\r\n}\r\n\r\nexport type Actions = AddFavorite | RemoveFavorite | UpdateFavorite;\r\n","import { localStorageSync } from 'ngrx-store-localstorage';\r\nimport { ActionReducer } from '@ngrx/store';\r\nimport { Weather } from '../interfaces/weather';\r\n\r\nexport function localStorageSyncReducer(reducer: ActionReducer<Weather[]>): ActionReducer<any> {\r\n  return localStorageSync({ keys: ['favorites'], rehydrate: true })(reducer);\r\n}\r\n","import * as WeatherActions from './actions';\r\nimport { Weather } from '../interfaces/weather';\r\n\r\nexport function reducer(state: Weather[] = [], action: WeatherActions.Actions): Weather[] {\r\n  switch (action.type) {\r\n    \r\n    case WeatherActions.Types.ADD_FAVORITE:\r\n      return [...state, action.payload as Weather];\r\n\r\n    case WeatherActions.Types.REMOVE_FAVORITE:\r\n      return state.filter(weather => weather.Key !== action.payload);\r\n\r\n    case WeatherActions.Types.UPDATE_FAVORITE:\r\n      let index = state.map(weather => weather.Key)\r\n        .indexOf((action.payload as Weather).Key);\r\n      return [\r\n        ...state.slice(0, index),\r\n        action.payload as Weather,\r\n        ...state.slice(index + 1)\r\n      ]\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Weather } from '../interfaces/weather';\r\nimport { Temperature } from '../interfaces/Temperature';\r\nimport { Forecast } from '../interfaces/forecast';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherHelper {\r\n\r\n  public isDayTime(weather: Weather): boolean {\r\n    return weather.currentWeather.IsDayTime;\r\n  }\r\n  public getForecastIcon(weather: Weather, forecastIndex: number): string {\r\n    let forecast = weather.forecast.DailyForecasts[forecastIndex];\r\n    if(this.isDayTime(weather)){\r\n      return this.getWeatherIconLink(forecast.Day.Icon)\r\n    }\r\n    return this.getWeatherIconLink(forecast.Night.Icon)\r\n  }\r\n  public getWeatherIconLink(iconNumber: number): string {\r\n    let str = iconNumber > 9 ? iconNumber : `0${iconNumber}`;\r\n    return `https://developer.accuweather.com/sites/default/files/${str}-s.png`\r\n  }\r\n  public getCTemperatureString(temperature: Temperature): string {\r\n    let val: number;\r\n    if (temperature.Unit === \"C\") {\r\n      val = temperature.Value\r\n    } else {\r\n      val = (temperature.Value - 32) * 5 / 9;\r\n    }\r\n    return `${val.toFixed(0)}\\u00B0C`;\r\n  }\r\n  public getFTemperatureString(temperature: Temperature): string {\r\n    let val: number;\r\n    if (temperature.Unit === \"F\") {\r\n      val = temperature.Value\r\n    } else {\r\n      val = (temperature.Value - 32) * 9 / 5 + 32;\r\n    }\r\n    return `${val.toFixed(0)}\\u00B0F`;\r\n  }\r\n  public getTemperatureRange(forecast: Forecast, isCelsiusType: boolean): string {\r\n    let minimum: string;\r\n    let maximum: string;\r\n    if(isCelsiusType){\r\n      minimum = this.getCTemperatureString(forecast.Temperature.Minimum)\r\n      maximum = this.getCTemperatureString(forecast.Temperature.Maximum)\r\n    } else {\r\n      minimum = this.getFTemperatureString(forecast.Temperature.Minimum)\r\n      maximum = this.getFTemperatureString(forecast.Temperature.Maximum)\r\n    }\r\n    return `${minimum} - ${maximum}`;\r\n  }\r\n  public getCurrentForecastText(weather: Weather,forecastIndex: number): string {\r\n    const forecast = weather.forecast.DailyForecasts[forecastIndex];\r\n    if(this.isDayTime(weather)){\r\n      return forecast.Day.IconPhrase;\r\n    }\r\n    return forecast.Night.IconPhrase;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { FavoritesComponent } from './pages/favorites/favorites.component';\n\n\nconst routes: Routes = [\n  {path: 'search', component: SearchPageComponent},\n  {path: 'favorites', component: FavoritesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store'\nimport { reducer } from './store/reducers';\nimport { WeatherRoutingModule } from './weather-routing.module';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { WeatherViewComponent } from './components/weather-view/weather-view.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from '../shared/shared.module';\nimport { FavoritesComponent } from './pages/favorites/favorites.component';\nimport { ForecastComponent } from './components/forecast/forecast.component';\nimport { localStorageSyncReducer } from './store/meta-reducers';\nimport { FavoriteItemComponent } from './components/favorite-item/favorite-item.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    SearchPageComponent,\n    SearchBarComponent,\n    WeatherViewComponent,\n    FavoritesComponent,\n    ForecastComponent,\n    FavoriteItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    StoreModule.forRoot({\n      favorites: reducer\n    }, { metaReducers: [localStorageSyncReducer] }),\n    NgbTypeaheadModule,\n    WeatherRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    BrowserAnimationsModule\n  ]\n})\nexport class WeatherModule { }\n","export const environment = {\n  production: false,\n  // apiKey: 'OQ87QXhI3w8c6js4YH4P6DAZPUUP8iA6'\n  apiKey: 'ywdGKGqV43j2QCwAnwtZJWDTCXk1GA40'\n  // apiKey: '2Nj1GACFkAWToLTjCAOkdsVz5RtrsOym'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
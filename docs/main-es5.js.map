{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/animations.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/navbar/navbar.component.ts","webpack:///src/app/shared/components/navbar/navbar.component.html","webpack:///src/app/shared/components/toasts/toasts.component.ts","webpack:///src/app/shared/components/toasts/toasts.component.html","webpack:///src/app/shared/components/toggle-button/toggle-button.component.ts","webpack:///src/app/shared/components/toggle-button/toggle-button.component.html","webpack:///src/app/shared/services/toast.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/weather/components/favorite-item/favorite-item.component.ts","webpack:///src/app/weather/components/favorite-item/favorite-item.component.html","webpack:///src/app/weather/components/forecast/forecast.component.ts","webpack:///src/app/weather/components/forecast/forecast.component.html","webpack:///src/app/weather/components/search-bar/search-bar.component.ts","webpack:///src/app/weather/components/search-bar/search-bar.component.html","webpack:///src/app/weather/components/weather-view/weather-view.component.ts","webpack:///src/app/weather/components/weather-view/weather-view.component.html","webpack:///src/app/weather/pages/favorites/favorites.component.ts","webpack:///src/app/weather/pages/favorites/favorites.component.html","webpack:///src/app/weather/pages/search-page/search-page.component.html","webpack:///src/app/weather/pages/search-page/search-page.component.ts","webpack:///src/app/weather/services/auto-complete.service.ts","webpack:///src/app/weather/services/forecast.service.ts","webpack:///src/app/weather/services/geolocation.service.ts","webpack:///src/app/weather/services/weather.service.ts","webpack:///src/app/weather/store/actions.ts","webpack:///src/app/weather/store/meta-reducers.ts","webpack:///src/app/weather/store/reducers.ts","webpack:///src/app/weather/utils/weather-helper.ts","webpack:///src/app/weather/weather-routing.module.ts","webpack:///src/app/weather/weather.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","fade","name","miliseconds","delay","opacity","glide","pixels","transform","routes","path","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NavbarComponent","isMenuCollapsed","toastService","ToastsComponent","ToggleButtonComponent","onChangeState","state","emit","changeState","ToastService","toasts","message","show","header","body","className","toast","push","filter","t","providedIn","SharedModule","FavoriteItemComponent","_store","_router","_weatherService","_forecastService","weatherHelper","updateFavorite","weather","dispatch","Key","favorite","lastUpdate","Date","currentWeather","LocalObservationDateTime","today","now","getTime","updatedFavorite","country","forecast","all","getCurrentWeather","toPromise","getForecast","results","err","showErrorToast","navigate","queryParams","key","getFullWeatherPage","removeFavorite","ForecastComponent","SearchBarComponent","_autoCompleteService","searchInput","search","selectFormatter","value","selectedCity","onSearch","popupFormatter","LocalizedName","Country","onAutoComplete","value$","pipe","getAutoComplete","event","filterText","nonEnglishRegex","RegExp","replace","keyPress","WeatherViewComponent","isCelsiusType","favorites$","select","subscribe","result","favorites","findIndex","fav","setTemperatureType","FavoritesComponent","animations","SearchPageComponent","_geolocation","_route","resetWeather","snapshot","getWeatherFromRouteParams","getLocalWeather","params","setWeather","getCurrentLocation","setWeatherDataByKey","data","AutoCompleteService","_http","url","get","apikey","apiKey","q","ForecastService","locationKey","GeolocationService","res","rej","navigator","geolocation","getCurrentPosition","response","lon","coords","longitude","lat","latitude","toString","getGeolocation","location","getStateByGeolocation","WeatherService","Types","ADD_FAVORITE","REMOVE_FAVORITE","UPDATE_FAVORITE","AddFavorite","payload","type","RemoveFavorite","UpdateFavorite","localStorageSyncReducer","reducer","rehydrate","action","index","map","indexOf","slice","WeatherHelper","IsDayTime","forecastIndex","DailyForecasts","isDayTime","getWeatherIconLink","Day","Icon","Night","iconNumber","str","temperature","val","Unit","Value","toFixed","minimum","maximum","getCTemperatureString","Temperature","Minimum","Maximum","getFTemperatureString","IconPhrase","component","WeatherRoutingModule","forChild","WeatherModule","metaReducers","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { trigger, transition, state, style, animate } from '@angular/animations';\r\n\r\nexport let fade = (name: string, miliseconds: number, delay?: number) => {\r\n  if(!delay) delay = 0;\r\n  return trigger(name, [\r\n    state('void', style({ opacity: 0 })),\r\n    transition(':enter, :leave', [animate(`${miliseconds}ms ${delay}ms`)])\r\n  ])\r\n}\r\nexport let glide = (name: string, pixels: number, miliseconds: number, delay?: number) => {\r\n  if(!delay) delay = 0;\r\n  return trigger(name, [\r\n    state('void', style({ transform: `translateY(${pixels}px)` })),\r\n    transition(':enter', [animate(`${miliseconds}ms ${delay}ms`)])\r\n  ])\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/search'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'WeatherApp';\n}\n","<header>\n  <app-navbar></app-navbar>\n</header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<footer></footer>\n<app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { WeatherModule } from './weather/weather.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    WeatherModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  public isMenuCollapsed: boolean = true;\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n  <a class=\"navbar-brand\" routerLink=\"/\">Herolo Weather Task</a>\n  <button class=\"navbar-toggler\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\n    &#9776;\n  </button>\n  <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse d-lg-flex justify-content-end\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"search\" routerLinkActive=\"active\" (click)=\"isMenuCollapsed = true\">Search</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"favorites\" routerLinkActive=\"active\" (click)=\"isMenuCollapsed = true\">Favorites</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\nimport { ToastService } from '../../services/toast.service';\n\n@Component({\n  selector: 'app-toasts',\n  templateUrl: './toasts.component.html',\n  styleUrls: ['./toasts.component.scss']\n})\nexport class ToastsComponent {\n  constructor(public toastService: ToastService) { }\n}\n","<ngb-toast *ngFor=\"let toast of toastService.toasts\"\n  [header]=\"toast.header\" [class]=\"toast.className\" [autohide]=\"true\"\n  [delay]=\"5000\" (hide)=\"toastService.removeToast(toast)\">\n  {{toast.body}}\n</ngb-toast>\n","import { Component, Output, Input, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss']\n})\nexport class ToggleButtonComponent {\n\n  @Output()\n  public onChangeState: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n  @Input()\n  public falseText: string;\n  @Input()\n  public trueText: string;\n\n  public changeState(state: boolean): void {\n    this.onChangeState.emit(state);\n  }\n\n}\n","<div class=\"form-check form-check-inline\">\n  <input (change)=\"changeState(false)\" class=\"form-check-input\" type=\"radio\" name=\"switchButton\">\n  <label class=\"form-check-label\" for=\"inlineRadio1\">{{falseText}}</label>\n</div>\n<div class=\"form-check form-check-inline\">\n  <input checked (change)=\"changeState(true)\" class=\"form-check-input\" type=\"radio\" name=\"switchButton\">\n  <label class=\"form-check-label\" for=\"inlineRadio2\">{{trueText}}</label>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Toast } from '../interfaces/Toast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  public toasts: Toast[] = [];\n\n  public showErrorToast(message?: string): void {\n    this.show({\n      header: 'Error',\n      body: message || 'Something went wrong, please try again later',\n      className: 'bg-danger text-light'\n    })\n  }\n\n  public show(toast: Toast): void {\n    this.toasts.push(toast);\n  }\n\n  public removeToast(toast: Toast): void {\n    this.toasts = this.toasts.filter(t => t != toast);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToggleButtonComponent } from './components/toggle-button/toggle-button.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ToastsComponent } from './components/toasts/toasts.component';\nimport { NgbToastModule, NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\n@NgModule({\n  declarations: [\n    ToggleButtonComponent,\n    NavbarComponent,\n    ToastsComponent\n  ],\n  imports: [\n    CommonModule,\n    NgbCollapseModule,\n    RouterModule,\n    NgbToastModule\n  ],\n  exports: [\n    ToggleButtonComponent,\n    NavbarComponent,\n    ToastsComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from '../../interfaces/weather';\nimport { WeatherHelper } from '../../utils/weather-helper';\nimport { Store } from '@ngrx/store';\nimport * as WeatherActions from '../../store/actions';\nimport { Router } from '@angular/router';\nimport { WeatherService } from '../../services/weather.service';\nimport { ForecastService } from '../../services/forecast.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-favorite-item',\n  templateUrl: './favorite-item.component.html',\n  styleUrls: ['./favorite-item.component.scss']\n})\nexport class FavoriteItemComponent implements OnInit {\n\n  @Input()\n  public weather: Weather;\n\n  constructor(\n    private _store: Store,\n    private _router: Router,\n    private _weatherService: WeatherService,\n    private _forecastService: ForecastService,\n    public toastService: ToastService,\n    public weatherHelper: WeatherHelper\n  ) { }\n\n  public ngOnInit(): void {\n    this.updateFavorite(this.weather);\n  }\n\n  public removeFavorite(): void {\n    this._store.dispatch(new WeatherActions.RemoveFavorite(this.weather.Key))\n  }\n\n  public updateFavorite(favorite: Weather) {\n    try {\n      let lastUpdate = new Date(favorite.currentWeather.LocalObservationDateTime);\n      let today = new Date(Date.now());\n      if (today.getTime() - lastUpdate.getTime() > 1000 * 60 * 60 * 24) {\n        let updatedFavorite: Weather = {\n          Key: favorite.Key,\n          state: favorite.state,\n          country: favorite.country,\n          currentWeather: null,\n          forecast: null\n        }\n        Promise.all([\n          this._weatherService.getCurrentWeather(favorite.Key).toPromise(),\n          this._forecastService.getForecast(favorite.Key).toPromise()\n        ]).then(results => {\n          updatedFavorite.currentWeather = results[0][0];\n          updatedFavorite.forecast = results[1];\n          this._store.dispatch(new WeatherActions.UpdateFavorite(favorite))\n        })\n      }\n    } catch (err) {\n      this.toastService.showErrorToast(err.message);\n    }\n  }\n\n  public getFullWeatherPage(): void {\n    this._router.navigate(['search'], {\n      queryParams: {\n        key: this.weather.Key,\n        state: this.weather.state,\n        country: this.weather.country\n      }\n    })\n  }\n\n}\n","<div class=\"container-fluid border p-2 favorite-item\"\n[ngClass]=\"{\n  'bg-light': weatherHelper.isDayTime(weather),\n  'bg-dark text-light': !weatherHelper.isDayTime(weather)\n}\" (click)=\"getFullWeatherPage()\">\n<h4>{{ weather.state }}</h4>\n  <h5>{{ weather.country }}</h5>\n<img class=\"weatherIcon\" [src]=\"weatherHelper.getWeatherIconLink(weather.currentWeather.WeatherIcon)\" />\n<p class=\"forecast-text\">{{ weather.currentWeather.WeatherText }}</p>\n<p class=\"mb-2\">\n  {{ weatherHelper.getCTemperatureString(weather.currentWeather.Temperature.Metric) }}\n</p>\n<p>{{ weather.currentWeather.LocalObservationDateTime | date:'EEEE'}}</p>\n<button (click)=\"removeFavorite()\" class=\"btn btn-danger\">\n  Remove from Favorites\n</button>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent {\n\n  @Input()\n  public iconUrl: string;\n  @Input()\n  public text: string;\n  @Input()\n  public tempRange: string;\n  @Input()\n  public date: Date;\n}\n","<img class=\"weatherIcon\" [src]=\"iconUrl\" alt=\"\">\n<p class=\"forecast-text\">{{ text }}</p>\n<p class=\"mb-5\">\n  {{ tempRange }}\n</p>\n<p class=\"forecast-date\">{{ date | date:'EEEE'}}</p>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IAutoCompleteResponse } from '../../interfaces/iauto-complete-response';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { AutoCompleteService } from '../../services/auto-complete.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent {\n\n  public selectedCity: IAutoCompleteResponse;\n  searchInput: string = '';\n\n  @Input() public inputPlaceholder: string;\n  @Output() public search: EventEmitter<IAutoCompleteResponse> = new EventEmitter<IAutoCompleteResponse>();\n\n  constructor(\n    private _autoCompleteService: AutoCompleteService,\n    public toastService: ToastService\n  ) { }\n\n  public onSearch(): void {\n    if (!this.searchInput) return;\n    if (!this.selectedCity)\n      return this.toastService.showErrorToast('Invalid state, please try again');\n    this.search.emit(this.selectedCity);\n  }\n\n  public keyPress(event): void {\n    this.filterText()\n    if (event.key === \"Enter\")\n      this.onSearch();\n  }\n\n  public filterText(): void {\n    try{\n      const nonEnglishRegex = new RegExp(/^[^A-Za-z]*$/);\n      this.searchInput = this.searchInput.replace(nonEnglishRegex, '');\n    } catch(err) {\n      return;\n    }\n  }\n\n  public selectFormatter = (value: IAutoCompleteResponse): string => {\n    this.selectedCity = value;\n    this.onSearch()\n    return this.popupFormatter(value);\n  }\n  public popupFormatter = (value: IAutoCompleteResponse): string => {\n    return value ? `${value.LocalizedName}, ${value.Country.LocalizedName}` : null\n  }\n\n  public onAutoComplete = (value$: Observable<string>): Observable<IAutoCompleteResponse[]> => {\n    return value$.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap(value => this._autoCompleteService.getAutoComplete(value)),\n      catchError((err) => { this.toastService.showErrorToast(err.message); return of([]) })\n    )\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-8 offset-lg-2\">\n      <div class=\"input-group\">\n        <input\n        (keyup)=\"keyPress($event)\"\n        #searchValue=\"ngModel\"\n        [(ngModel)]=\"searchInput\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{inputPlaceholder}}\"\n        [ngbTypeahead]=\"onAutoComplete\"\n        [resultFormatter]=\"popupFormatter\"\n        [inputFormatter]=\"selectFormatter\">\n        <div class=\"input-group-append\">\n          <button (click)=\"onSearch()\" class=\"btn btn-outline-secondary\" type=\"button\">\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from '../../interfaces/weather';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { FavoritesState } from '../../store/state';\nimport * as WeatherActions from '../../store/actions';\nimport { WeatherHelper } from '../../utils/weather-helper';\n\n@Component({\n  selector: 'app-weather-view',\n  templateUrl: './weather-view.component.html',\n  styleUrls: ['./weather-view.component.scss']\n})\nexport class WeatherViewComponent implements OnInit {\n\n  @Input()\n  public weather: Weather\n  public isCelsiusType: boolean = true;\n  public readonly favorites$: Observable<Weather[]>;\n  public favorites: Weather[];\n\n  constructor(\n    private _store: Store<FavoritesState>,\n    public weatherHelper: WeatherHelper\n  ) {\n    this.favorites$ = this._store.select('favorites')\n  }\n  public ngOnInit(): void {\n    this.favorites$.subscribe(result => this.favorites = result);\n  }\n  public setTemperatureType(value: boolean): void {\n    this.isCelsiusType = value;\n  }\n  public addFavorite(): void {\n    this._store.dispatch(new WeatherActions.AddFavorite(this.weather))\n  }\n  public removeFavorite(): void {\n    this._store.dispatch(new WeatherActions.RemoveFavorite(this.weather.Key))\n  }\n  public isFavorite(): boolean {\n    return this.favorites.findIndex(fav => fav.Key === this.weather.Key) >= 0;\n  }\n}\n","<div class=\"jumbotron mt-2 border pt-4 pb-4\" [ngClass]=\"{\n  'bg-light': weatherHelper.isDayTime(weather),\n  'bg-dark text-light': !weatherHelper.isDayTime(weather)}\">\n  <div class=\"row\">\n    <div class=\"col-3 col-md-2 col-lg-1\">\n      <img class=\"weatherIcon\" [src]=\"weatherHelper.getWeatherIconLink(weather.currentWeather.WeatherIcon)\" alt=\"\">\n    </div>\n    <div class=\"col-6\">\n      <h3>{{ weather.state }}, {{ weather.country }}</h3>\n      <span *ngIf=\"isCelsiusType\">\n        {{weatherHelper.getCTemperatureString(weather.currentWeather.Temperature.Metric)}}\n      </span>\n      <span *ngIf=\"!isCelsiusType\">\n        {{weatherHelper.getFTemperatureString(weather.currentWeather.Temperature.Imperial)}}\n      </span>\n    </div>\n    <div class=\"col-3 col-md-4 col-lg-5 text-right\">\n      <button *ngIf=\"!isFavorite()\" (click)=\"addFavorite()\" class=\"btn btn-lg btn-success\">\n        Add to Favorites\n      </button>\n      <button *ngIf=\"isFavorite()\" (click)=\"removeFavorite()\" class=\"btn btn-lg btn-danger\">\n        Remove from Favorites\n      </button>\n      <app-toggle-button (onChangeState)=\"setTemperatureType($event)\" class=\"d-block\" [trueText]=\"'Celsius'\"\n        [falseText]=\"'Fahrenheit'\"></app-toggle-button>\n    </div>\n  </div>\n  <div class=\"row mt-4\">\n    <div class=\"col-12 text-center\">\n      <h1>{{ weather.currentWeather.WeatherText }}</h1>\n      <h4>Forecast: <br> {{ weather.forecast.Headline.Text }}</h4>\n    </div>\n  </div>\n  <div class=\"row mt-4 d-flex justify-content-around\">\n    <div *ngFor=\"let forecast of weather.forecast.DailyForecasts; let i = index\"\n      class=\"col-5 col-lg-2 border m-1 text-center p-2 text-wrap mt-2\">\n      <app-forecast [iconUrl]=\"weatherHelper.getForecastIcon(weather,i)\" [date]=\"forecast.Date\"\n        [text]=\"weatherHelper.getCurrentForecastText(weather,i)\"\n        [tempRange]=\"weatherHelper.getTemperatureRange(forecast,isCelsiusType)\"></app-forecast>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Weather } from '../../interfaces/weather';\nimport { Store } from '@ngrx/store';\nimport { FavoritesState } from '../../store/state';\nimport { fade, glide } from 'src/app/animations';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n  animations: [\n    fade('fade',500),\n    glide('glide',-20,500),\n    fade('delayedFade',500,400),\n    glide('delayedGlide',-20,500,400)\n  ]\n})\nexport class FavoritesComponent {\n\n  public readonly favorites$: Observable<Weather[]>\n\n  constructor(private _store: Store<FavoritesState>) {\n    this.favorites$ = this._store.select('favorites');\n  }\n\n}\n","<div @fade @glide class=\"row\">\n  <div class=\"col-12 text-center\">\n    <h1>My Favorites</h1>\n  </div>\n</div>\n<div @delayedFade @delayedGlide class=\"row d-flex justify-content-around\">\n  <div class=\"col-5 col-md-4 col-lg-3 text-center mt-2 pt-2\" *ngFor=\"let favorite of favorites$ | async\">\n    <app-favorite-item [weather]=\"favorite\"></app-favorite-item>\n  </div>\n</div>\n","<div @fade @glide class=\"row\">\n  <div class=\"col-10 offset-1\">\n    <app-search-bar (search)=\"onSearch($event)\" [inputPlaceholder]=\"'Search State'\" ></app-search-bar>\n  </div>\n</div>\n<div @delayedFade @delayedGlide class=\"row mt-2\">\n  <div class=\"col-10 offset-1\">\n    <app-weather-view *ngIf=\"isWeatherLoaded\" [weather]=\"weather\"></app-weather-view>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../../services/weather.service';\nimport { ForecastService } from '../../services/forecast.service';\nimport { Weather } from '../../interfaces/weather';\nimport { IAutoCompleteResponse } from '../../interfaces/iauto-complete-response';\nimport { GeolocationService } from '../../services/geolocation.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { fade, glide } from 'src/app/animations';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n  animations: [\n    fade('fade',500),\n    glide('glide',-20,500),\n    fade('delayedFade',500,400),\n    glide('delayedGlide',-20,500,400)\n  ]\n})\nexport class SearchPageComponent implements OnInit {\n\n  public weather: Weather;\n\n  constructor(\n    private _weatherService: WeatherService,\n    private _forecastService: ForecastService,\n    private _geolocation: GeolocationService,\n    private _route: ActivatedRoute,\n    public toastService: ToastService\n  ) {\n    this.resetWeather();\n  }\n\n  public ngOnInit(): void {\n    if(this._route.snapshot.queryParams.key){\n      this.getWeatherFromRouteParams();\n    } else {\n      this.getLocalWeather();\n    }\n  }\n\n  private getWeatherFromRouteParams(): void {\n    let params = this._route.snapshot.queryParams;\n    if (params.key && params.state && params.country) {\n      this.setWeather(params.key, params.state, params.country);\n    }\n  }\n\n  public async getLocalWeather(): Promise<void> {\n    try {\n      const result = await this._geolocation.getCurrentLocation();\n      this.setWeather(result.Key, result.LocalizedName, result.Country.LocalizedName);\n    } catch (err) {\n      this.toastService.showErrorToast(err.message)\n    }\n  }\n\n  private resetWeather(): void {\n    this.weather = { Key: null, state: null, country: null, currentWeather: null, forecast: null };\n  }\n\n  public get isWeatherLoaded(): boolean {\n    for (let key in this.weather) {\n      if (this.weather[key] == null) {\n        return false\n      }\n    }\n    return true\n  }\n\n  public onSearch(state: IAutoCompleteResponse): void {\n    this.setWeather(state.Key, state.LocalizedName, state.Country.LocalizedName);\n  }\n\n  public setWeather(key: string, state: string, country: string): void {\n    this.resetWeather();\n    this.weather.Key = key;\n    this.weather.state = state;\n    this.weather.country = country;\n    this.setWeatherDataByKey(key);\n  }\n\n  private setWeatherDataByKey(key: string): void {\n    this._weatherService.getCurrentWeather(key).toPromise().then(data => {\n      this.weather.currentWeather = data[0];\n    }).catch(err => this.toastService.showErrorToast(err.message));\n\n    this._forecastService.getForecast(key).toPromise().then(data => {\n      this.weather.forecast = data;\n    }).catch(err => this.toastService.showErrorToast(err.message));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { IAutoCompleteResponse } from '../interfaces/iauto-complete-response';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoCompleteService {\n\n  private readonly url = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete';\n\n  constructor(private _http: HttpClient) { }\n\n  public getAutoComplete(value: string): Observable<IAutoCompleteResponse[]> {\n    return this._http.get<IAutoCompleteResponse[]>(this.url, {\n      params: {\n        apikey: environment.apiKey,\n        q: value\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IForecastResponse } from '../interfaces/iforecast-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n\n  private readonly url = 'https://dataservice.accuweather.com/forecasts/v1/daily/5day/';\n\n  constructor(private _http: HttpClient) { }\n\n  public getForecast(locationKey: string): Observable<IForecastResponse> {\n    return this._http.get<IForecastResponse>(this.url + locationKey,{\n      params:{\n        apikey: environment.apiKey,\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Location } from '../interfaces/Location';\nimport { IGeolocationResponse } from '../interfaces/igeolocation-response';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n\n  private readonly url = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search';\n\n  constructor(private _http: HttpClient) { }\n\n  private getGeolocation(): Promise<Location> {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(\n        (response) => res({ lon: response.coords.longitude, lat: response.coords.latitude }),\n        (err) => rej(err)\n      );\n    })\n  }\n\n  private getStateByGeolocation(lat: number, lon: number): Promise<IGeolocationResponse> {\n    return this._http.get<IGeolocationResponse>(this.url, {\n      params: {\n        apikey: environment.apiKey,\n        q: `${lat.toString()},${lon.toString()}`\n      }\n    }).toPromise();\n  }\n\n  public async getCurrentLocation(): Promise<IGeolocationResponse> {\n      const location = await this.getGeolocation();\n      return await this.getStateByGeolocation(location.lat, location.lon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { IWeatherResponse } from '../interfaces/iweather-reponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  private readonly url: string = 'https://dataservice.accuweather.com/currentconditions/v1/';\n\n  constructor(private _http: HttpClient) { }\n\n  public getCurrentWeather(locationKey: string): Observable<IWeatherResponse[]> {\n    return this._http.get<IWeatherResponse[]>(this.url + locationKey, {\n      params:{\n        apikey: environment.apiKey\n      }\n    })\n  }\n}\n","import { Action } from '@ngrx/store';\r\nimport { Weather } from '../interfaces/weather';\r\n\r\nexport const Types = {\r\n  ADD_FAVORITE: \"ADD_FAVORITE\",\r\n  REMOVE_FAVORITE: \"REMOVE_FAVORITE\",\r\n  UPDATE_FAVORITE: \"UPDATE_FAVORITE\"\r\n\r\n}\r\n\r\nexport class AddFavorite implements Action {\r\n  public readonly type = Types.ADD_FAVORITE;\r\n  constructor(public payload: Weather) { }\r\n}\r\n\r\nexport class RemoveFavorite implements Action {\r\n  public readonly type = Types.REMOVE_FAVORITE\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class UpdateFavorite implements Action {\r\n  public readonly type = Types.UPDATE_FAVORITE\r\n  constructor(public payload: Weather) { }\r\n}\r\n\r\nexport type Actions = AddFavorite | RemoveFavorite | UpdateFavorite;\r\n","import { localStorageSync } from 'ngrx-store-localstorage';\r\nimport { ActionReducer } from '@ngrx/store';\r\nimport { Weather } from '../interfaces/weather';\r\n\r\nexport function localStorageSyncReducer(reducer: ActionReducer<Weather[]>): ActionReducer<any> {\r\n  return localStorageSync({ keys: ['favorites'], rehydrate: true })(reducer);\r\n}\r\n","import * as WeatherActions from './actions';\r\nimport { Weather } from '../interfaces/weather';\r\n\r\nexport function reducer(state: Weather[] = [], action: WeatherActions.Actions): Weather[] {\r\n  switch (action.type) {\r\n    \r\n    case WeatherActions.Types.ADD_FAVORITE:\r\n      return [...state, action.payload as Weather];\r\n\r\n    case WeatherActions.Types.REMOVE_FAVORITE:\r\n      return state.filter(weather => weather.Key !== action.payload);\r\n\r\n    case WeatherActions.Types.UPDATE_FAVORITE:\r\n      let index = state.map(weather => weather.Key)\r\n        .indexOf((action.payload as Weather).Key);\r\n      return [\r\n        ...state.slice(0, index),\r\n        action.payload as Weather,\r\n        ...state.slice(index + 1)\r\n      ]\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Weather } from '../interfaces/weather';\r\nimport { Temperature } from '../interfaces/Temperature';\r\nimport { Forecast } from '../interfaces/forecast';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherHelper {\r\n\r\n  public isDayTime(weather: Weather): boolean {\r\n    return weather.currentWeather.IsDayTime;\r\n  }\r\n  public getForecastIcon(weather: Weather, forecastIndex: number): string {\r\n    let forecast = weather.forecast.DailyForecasts[forecastIndex];\r\n    if(this.isDayTime(weather)){\r\n      return this.getWeatherIconLink(forecast.Day.Icon)\r\n    }\r\n    return this.getWeatherIconLink(forecast.Night.Icon)\r\n  }\r\n  public getWeatherIconLink(iconNumber: number): string {\r\n    let str = iconNumber > 9 ? iconNumber : `0${iconNumber}`;\r\n    return `https://developer.accuweather.com/sites/default/files/${str}-s.png`\r\n  }\r\n  public getCTemperatureString(temperature: Temperature): string {\r\n    let val: number;\r\n    if (temperature.Unit === \"C\") {\r\n      val = temperature.Value\r\n    } else {\r\n      val = (temperature.Value - 32) * 5 / 9;\r\n    }\r\n    return `${val.toFixed(0)}\\u00B0C`;\r\n  }\r\n  public getFTemperatureString(temperature: Temperature): string {\r\n    let val: number;\r\n    if (temperature.Unit === \"F\") {\r\n      val = temperature.Value\r\n    } else {\r\n      val = (temperature.Value - 32) * 9 / 5 + 32;\r\n    }\r\n    return `${val.toFixed(0)}\\u00B0F`;\r\n  }\r\n  public getTemperatureRange(forecast: Forecast, isCelsiusType: boolean): string {\r\n    let minimum: string;\r\n    let maximum: string;\r\n    if(isCelsiusType){\r\n      minimum = this.getCTemperatureString(forecast.Temperature.Minimum)\r\n      maximum = this.getCTemperatureString(forecast.Temperature.Maximum)\r\n    } else {\r\n      minimum = this.getFTemperatureString(forecast.Temperature.Minimum)\r\n      maximum = this.getFTemperatureString(forecast.Temperature.Maximum)\r\n    }\r\n    return `${minimum} - ${maximum}`;\r\n  }\r\n  public getCurrentForecastText(weather: Weather,forecastIndex: number): string {\r\n    const forecast = weather.forecast.DailyForecasts[forecastIndex];\r\n    if(this.isDayTime(weather)){\r\n      return forecast.Day.IconPhrase;\r\n    }\r\n    return forecast.Night.IconPhrase;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { FavoritesComponent } from './pages/favorites/favorites.component';\n\n\nconst routes: Routes = [\n  {path: 'search', component: SearchPageComponent},\n  {path: 'favorites', component: FavoritesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store'\nimport { reducer } from './store/reducers';\nimport { WeatherRoutingModule } from './weather-routing.module';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { WeatherViewComponent } from './components/weather-view/weather-view.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from '../shared/shared.module';\nimport { FavoritesComponent } from './pages/favorites/favorites.component';\nimport { ForecastComponent } from './components/forecast/forecast.component';\nimport { localStorageSyncReducer } from './store/meta-reducers';\nimport { FavoriteItemComponent } from './components/favorite-item/favorite-item.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    SearchPageComponent,\n    SearchBarComponent,\n    WeatherViewComponent,\n    FavoritesComponent,\n    ForecastComponent,\n    FavoriteItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    StoreModule.forRoot({\n      favorites: reducer\n    }, { metaReducers: [localStorageSyncReducer] }),\n    NgbTypeaheadModule,\n    WeatherRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    BrowserAnimationsModule\n  ]\n})\nexport class WeatherModule { }\n","export const environment = {\n  production: false,\n  // apiKey: 'OQ87QXhI3w8c6js4YH4P6DAZPUUP8iA6'\n  apiKey: 'ywdGKGqV43j2QCwAnwtZJWDTCXk1GA40'\n  // apiKey: '2Nj1GACFkAWToLTjCAOkdsVz5RtrsOym'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}